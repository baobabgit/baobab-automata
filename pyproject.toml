[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "baobab-automata"
version = "0.1.0"
description = "Librairie Python complÃ¨te pour la gestion des automates et de leurs algorithmes"
authors = [{name = "ANDRIANAIVO Patrick", email = "patrick.andri@gmail.com"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.24.0",
    "graphviz>=0.20.0",
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-watch>=4.2.0",
    "black>=23.0.0",
    "pylint>=2.17.0",
    "flake8>=6.0.0",
    "bandit>=1.7.0",
    "mypy>=1.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "pre-commit>=3.3.0",
    "isort>=5.12.0"
]
    
[project.urls]
Homepage = "https://github.com/baobab-automata/baobab-automata"
Repository = "https://github.com/baobab-automata/baobab-automata.git"
Documentation = "https://baobab-automata.readthedocs.io/"
"Bug Tracker" = "https://github.com/baobab-automata/baobab-automata/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Configuration Black
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Configuration Pylint
[tool.pylint.messages_control]
disable = [    
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "C0415",  # import-outside-topleve
]

[tool.pylint.format]
max-line-length = 121
max-module-lines = 2000

[tool.pylint.design]
max-args = 10
max-locals = 25
max-returns = 10
max-branches = 25
max-nested-blocks = 10
max-public-methods = 30
max-positional-arguments = 10

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = true
ignore-docstrings = true
ignore-imports = false

# Configuration Flake8
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
max-args = 10
max-locals = 20
max-branches = 15
max-bool-expr = 5
max-statements = 50
max-attributes = 10
max-public-methods = 20

exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",

    "*.egg-info",
    ".eggs",
]

per-file-ignores = [
    "__init__.py:F401",
]

# Configuration Bandit
[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101", "B601"]

# Configuration MyPy
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Configuration Pytest
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: Slow tests",
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "regression: Regression tests",
]

# Configuration Coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Configuration Sphinx
[tool.sphinx]
source_dir = "docs"
build_dir = "docs/_build"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
